{
    "openapi": "3.0.2",
    "info": {
        "title": "Petstore",
        "version": "1.0.0",
        "description": "A sample API that uses a petstore as an example to demonstrate features in the swagger-2.0 specification",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "Swagger API Team",
            "url": "http://swagger.io",
            "email": "apiteam@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
        }
    },
    "servers": [
        {
            "url": "http://petstore.swagger.io/api"
        }
    ],
    "paths": {
        "/pets": {
            "get": {
                "parameters": [
                    {
                        "style": "form",
                        "explode": false,
                        "name": "tags",
                        "description": "tags to filter by",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "in": "query",
                        "required": false
                    },
                    {
                        "name": "limit",
                        "description": "maximum number of results to return",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        },
                        "in": "query",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Pet"
                                    }
                                },
                                "examples": {
                                    "all": {
                                        "value": [
                                            {
                                                "id": 1,
                                                "name": "dog",
                                                "tag": "animal"
                                            },
                                            {
                                                "id": 2,
                                                "name": "cat",
                                                "tag": "animal"
                                            }
                                        ]
                                    }
                                }
                            }
                        },
                        "description": "pet response"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "unexpected error"
                    }
                },
                "operationId": "findPets",
                "description": "Returns all pets from the system"
            },
            "post": {
                "requestBody": {
                    "description": "Pet to add to the store",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Pet"
                            },
                            "examples": {
                                "bird": {
                                    "value": {
                                        "id": 3,
                                        "name": "bird",
                                        "tag": "animal"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Pet"
                                },
                                "examples": {
                                    "bird": {
                                        "value": {
                                            "id": 3,
                                            "name": "bird",
                                            "tag": "animal"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Pet is created"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "400 Bad Request"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "unexpected error"
                    }
                },
                "operationId": "addPet",
                "description": "Creates a new pet in the store.  Duplicates are allowed"
            }
        },
        "/pets/{id}": {
            "get": {
                "parameters": [
                    {
                        "name": "id",
                        "description": "ID of pet to fetch",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        },
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Pet"
                                }
                            }
                        },
                        "description": "pet response"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "unexpected error"
                    }
                },
                "operationId": "find pet by id",
                "description": "Returns a user based on a single ID, if the user does not have access to the pet"
            },
            "delete": {
                "parameters": [
                    {
                        "name": "id",
                        "description": "ID of pet to delete",
                        "schema": {
                            "format": "int64",
                            "type": "integer"
                        },
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "pet deleted"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "unexpected error"
                    }
                },
                "operationId": "deletePet",
                "description": "deletes a single pet based on the ID supplied"
            },
            "parameters": [
                {
                    "name": "id",
                    "schema": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        }
    },
    "components": {
        "schemas": {
            "Pet": {
                "required": [
                    "id",
                    "name"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "integer"
                    },
                    "name": {
                        "description": "",
                        "type": "string"
                    },
                    "tag": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "Error": {
                "required": [
                    "code",
                    "message"
                ],
                "type": "object",
                "properties": {
                    "code": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "message": {
                        "type": "string"
                    }
                }
            }
        }
    }
}